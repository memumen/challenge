version: '3.7'

x-app: &app
  build:
    context: .
    dockerfile: ./.dockerDev/Dockerfile
    args:
      RUBY_VERSION: '2.7.2'
      PG_MAJOR: '13'
      BUNDLER_VERSION: '2.2'
      NODE_MAJOR: '14'
      YARN_VERSION: '1.22.5'
  stdin_open: true
  tty: true
  image: one-mob-challenge
  volumes:
    - node_modules:/app/node_modules
    - packs:/app/public/packs
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
  environment:
    RAILS_ENV: ${RAILS_ENV:-development}
    NODE_ENV: ${NODE_ENV:-development}
    DATABASE_URL: postgresql://postgres:postgres@postgres
    EDITOR: nano
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap
    WEB_CONCURRENCY: 1
    MALLOC_ARENA_MAX: 2
    WEBPACKER_DEV_SERVER_HOST: webpacker
  depends_on:
    - postgres

services:
  app:
    <<: *app
    command: bash -c "bundle exec puma -C config/puma.rb -p 5000"
    ports:
      - 5000:5000
    logging:
      options:
        max-size: "20m"

  webpacker:
    <<: *app
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    volumes:
      - .:/app:cached
      - bundle:/usr/local/bundle
      - node_modules:/app/node_modules
      - packs:/app/public/packs
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      RAILS_ENV: ${RAILS_ENV:-development}
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  postgres:
    image: postgres:13
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432

volumes:
  packs:
  node_modules:
  rails_cache:
  postgres:
  bundle:
